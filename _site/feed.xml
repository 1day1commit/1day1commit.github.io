<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-11-18T02:16:47+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">개발 기록장</title><subtitle>공부한 것을 기록하는 공간</subtitle><author><name>TAEYEONG JEONG</name></author><entry><title type="html">Javascript Array 메서드 정리</title><link href="http://localhost:4000/javascript-1/" rel="alternate" type="text/html" title="Javascript Array 메서드 정리" /><published>2021-11-17T08:17:35+09:00</published><updated>2021-11-17T08:17:39+09:00</updated><id>http://localhost:4000/javascript-1</id><content type="html" xml:base="http://localhost:4000/javascript-1/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;array&quot;&gt;Array&lt;/h1&gt;

&lt;h2 id=&quot;slice&quot;&gt;slice&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice()&lt;/code&gt; 메서드는 배열 내의 특정한 요소의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index&lt;/code&gt; 범위에 따라 새로운 배열을 리턴합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice()&lt;/code&gt; 메서드는 원본 배열을 변형시키지 않습니다.&lt;/strong&gt; 따라서 이 메서드를 사용할 때는 반드시 리턴하는 배열을 받을 새로운 변수를 선언해 주어야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [] 은 배열을 뜻하는 것이 아니라 생략이 가능하다는 것을 나타냅니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice()&lt;/code&gt; 메서드의 기본 형태 입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 는 생략 가능합니다. (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 가 없을 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin&lt;/code&gt; 도 생략 가능합니다.)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin&lt;/code&gt;: 추출 시작점에 대한 인덱스를 의미합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt;: 추출을 종료할 인덱스를 의미합니다. &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice()&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 인덱스를 제외하고 추출합니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice(1, 4)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‘1 &amp;lt;= 인덱스 &amp;lt; 4 추출해줘’ 이렇게 이해하시면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4, 5] -&amp;gt; 원본 배열이 변형되지 않음&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 는 생략이 가능하다고 했죠? &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin&lt;/code&gt; 만 있을때는 어떻게 되는지 알아보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newArr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [2, 3, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 추출 시작점부터 배열의 끝까지 추출합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;begin&lt;/code&gt; 에 음수를 넣었을 때는 인덱스가 아닌 ‘뒤에서 몇 번째 요소인지’ 입니다.&lt;/p&gt;

&lt;p&gt;ex) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice(-2)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‘뒤에서 두 개의 요소를 추출해줘’ 라고 생각하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newArr3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 에 음수를 넣으면 어떻게 될까요? (너무 헷갈려서 맨 뒤로 빼놨는데 그냥 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 를 음수로 사용하는 경우까지는 생각 안하는게 편할듯 합니다 ㅎㅎ;)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slice(1, -2)&lt;/code&gt; 는 ‘1번 인덱스부터 뒤에서 세 번째 요소까지 추출해줘’ 입니다.&lt;/p&gt;

&lt;p&gt;음수일 경우 인덱스가 아닌 뒤에서 몇 번째 요소인지를 생각하는데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; 이기 때문에 본인은 제외합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newArr4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newArr4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;splice&quot;&gt;splice&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splice&lt;/code&gt; 메서드는 세 가지 경우에 사용합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;배열 내의 특정한 요소를 삭제하고 싶을 때&lt;/li&gt;
  &lt;li&gt;배열 내의 특정한 요소를 다른 요소로 대치하고 싶을 때&lt;/li&gt;
  &lt;li&gt;배열 내에 새로운 요소를 추가하고 싶을 때&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;splice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deleteCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...]]]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start&lt;/code&gt;: 배열의 변경을 시작할 인덱스&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deleteCount&lt;/code&gt;: 배열에서 제거할 요소의 수, 값을 생략하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start&lt;/code&gt; 부터 뒤로 모든 요소를 제거합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;item1, item2, ...&lt;/code&gt;: 배열에 추가할 요소, 아무 요소도 지정하지 않으면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splice()&lt;/code&gt; 는 요소를 제거하기만 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예제를 통해 알아보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;splice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 10, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arr.splice(2, 1, 10)&lt;/code&gt; 은 ‘2번 인덱스부터, 1개의 요소를 삭제하고, 그자리에 10 을 추가해 주세요’ 라고 해석하면 됩니다!&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splice()&lt;/code&gt; 메서드는 보통 댓글 삭제 기능을 구현할 때 많이 사용한다고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;filter&quot;&gt;filter&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter()&lt;/code&gt; 메서드는 array 관련 메서드로 조건에 맞는 요소들만 모아서 새로운 배열을 반환합니다. 만약 조건에 부합되는 요소가 아무것도 없다면 빈 배열을 반환합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thisArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;callback&lt;/code&gt;: 각 요소를 시험할 함수, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; 를 반환하면 요소를 유지하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 를 반환하면 요소를 버립니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;element, index, array&lt;/code&gt; 세 가지의 매개변수를 받을 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thisArg&lt;/code&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;callback&lt;/code&gt; 을 실행할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; 로 사용하는 값&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제를 통해 이해해 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isBiggerThanTen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBiggerThanTen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [43, 28, 20, 33]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arr.filter&lt;/code&gt; 에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isBiggerThanTen&lt;/code&gt; 이라는 함수가 들어가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter()&lt;/code&gt; 메서드는 먼저 첫 번째 요소인 43 을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isBiggerThanTen&lt;/code&gt; 함수에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 라는 인자로 보냅니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isBiggerThanTen&lt;/code&gt; 함수는 43 이 10 보다 크니 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; 를 반환하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter()&lt;/code&gt; 메서드는 43 요소를 유지합니다.&lt;/p&gt;

&lt;p&gt;이런 과정을 마지막 요소까지 진행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[43, 28, 20, 33]&lt;/code&gt; 이라는 배열이 리턴됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그런데 콜백함수를 위의 예제와 같이 나눠서 사용하면 불편하고 가독성도 좋지 않으니 Arrow Function 으로 바꿔주겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [43, 28, 20, 33]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 간단한 코드로 바꿀 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;concat&quot;&gt;concat&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;concat()&lt;/code&gt; 메서드는 주어진 배열에 기존 배열을 합쳐서 새로운 배열을 반환합니다.&lt;/p&gt;

&lt;p&gt;원본 배열에 영향을 주지 않으며 새로운 배열이나 원본 배열을 수정해도 서로 영향을 받지 않습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alphabet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hangeul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ㄱ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ㄴ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ㄷ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hangeul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['a', 'b', 'c', 'ㄱ', 'ㄴ', 'ㄷ']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;다음은 주의해야 할 점에 대해 알아보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['a', 'b', 'c', 1, [2, 3]]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['a', 'b', 'c', 1, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 똑같은 배열을 넣어도 변수에 지정해서 넣을 때와 함수안에 직접 배열을 작성해서 넣을 때 리턴값에 차이가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;concat-과-filter-응용&quot;&gt;concat 과 filter 응용&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4, 5, 3, 4, 5, 6, 7];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eraseDuplicates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ereaseDuplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4, 5, 6, 7]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;코드를 이해하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indexof()&lt;/code&gt; 라는 메서드를 알아보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;indexof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searhElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fromIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;searchElement&lt;/code&gt;: 배열에서 찾을 요소입니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromIndex&lt;/code&gt;: 검색을 시작할 인덱스입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indexof()&lt;/code&gt; 메서드는 배열 내에서 찾은 최초의 인덱스 값을 반환합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 코드를 해석해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter()&lt;/code&gt; 메서드가 콜백함수에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; 변수의 요소와 인덱스를 차례로 넣습니다.&lt;/p&gt;

&lt;p&gt;처음에 (1, 0)을 넣었을 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result.indexOf(el)&lt;/code&gt; 값은 0 이 되고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 === 0&lt;/code&gt; 이므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; 가 반환되어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eraseDuplicates&lt;/code&gt; 변수에 1이 들어갑니다.&lt;/p&gt;

&lt;p&gt;그다음 (2, 1) 을 넣었을 때도 마찬가지겠죠? (3, 2) (4, 3) (5, 4) 까지 똑같이 들어가다가&lt;/p&gt;

&lt;p&gt;(3, 5) 가 콜백함수에 전달되었을 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result.indexOf(el)&lt;/code&gt; 값은 0 이고 0 은 5와 같지 않음으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 가 반환되어 두 번째 3은 배열에서 없어지게 됩니다.&lt;/p&gt;

&lt;p&gt;이런식으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; 변수의 끝까지 반복하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eraseDuplicates&lt;/code&gt; 변수에 중복된 값이 없는 배열이 들어가게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;push&quot;&gt;push&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push()&lt;/code&gt; 메서드를 사용하면 배열의 끝에 하나 이상의 요소를 추가할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pop&quot;&gt;pop&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop()&lt;/code&gt; 메서드는 배열의 마지막 요소를 제거하며 제거된 요소를 반환합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 4]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;shift&quot;&gt;shift&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift()&lt;/code&gt; 메서드는 배열의 첫 번째 요소를 제거하며 제거된 요소를 반환합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [4, 6]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="JavaScript" /><category term="Array" /><category term="JavaScript" /><summary type="html">Array slice slice() 메서드는 배열 내의 특정한 요소의 index 범위에 따라 새로운 배열을 리턴합니다. slice() 메서드는 원본 배열을 변형시키지 않습니다. 따라서 이 메서드를 사용할 때는 반드시 리턴하는 배열을 받을 새로운 변수를 선언해 주어야 합니다. slice( [begin[, end]] ) // [] 은 배열을 뜻하는 것이 아니라 생략이 가능하다는 것을 나타냅니다. slice() 메서드의 기본 형태 입니다. end 는 생략 가능합니다. (end 가 없을 경우 begin 도 생략 가능합니다.) begin: 추출 시작점에 대한 인덱스를 의미합니다. end: 추출을 종료할 인덱스를 의미합니다. slice() 는 end 인덱스를 제외하고 추출합니다. ex) slice(1, 4) ‘1 &amp;lt;= 인덱스 &amp;lt; 4 추출해줘’ 이렇게 이해하시면 됩니다. const arr = [1, 2, 3, 4, 5]; const newArr = arr.slice(1, 4); console.log(arr); // [1, 2, 3, 4, 5] -&amp;gt; 원본 배열이 변형되지 않음 console.log(newArr); // [2, 3, 4] end 는 생략이 가능하다고 했죠? begin 만 있을때는 어떻게 되는지 알아보겠습니다. const arr = [1, 2, 3, 4, 5]; const newArr2 = arr.slice(1); console.log(newArr2); // [2, 3, 4, 5] 이렇게 추출 시작점부터 배열의 끝까지 추출합니다. begin 에 음수를 넣었을 때는 인덱스가 아닌 ‘뒤에서 몇 번째 요소인지’ 입니다. ex) slice(-2) ‘뒤에서 두 개의 요소를 추출해줘’ 라고 생각하면 됩니다. const arr = [1, 2, 3, 4, 5]; const newArr3 = arr.slice(-2); console.log(newArr3); // [4, 5] 그러면 end 에 음수를 넣으면 어떻게 될까요? (너무 헷갈려서 맨 뒤로 빼놨는데 그냥 end 를 음수로 사용하는 경우까지는 생각 안하는게 편할듯 합니다 ㅎㅎ;) slice(1, -2) 는 ‘1번 인덱스부터 뒤에서 세 번째 요소까지 추출해줘’ 입니다. 음수일 경우 인덱스가 아닌 뒤에서 몇 번째 요소인지를 생각하는데 end 이기 때문에 본인은 제외합니다. const arr = [1, 2, 3, 4, 5]; const newArr4 = arr.slice(1, -2); console.log(newArr4); // [2, 3] splice splice 메서드는 세 가지 경우에 사용합니다. 배열 내의 특정한 요소를 삭제하고 싶을 때 배열 내의 특정한 요소를 다른 요소로 대치하고 싶을 때 배열 내에 새로운 요소를 추가하고 싶을 때 splice(start[, deleteCount[, item1[, item2[, ...]]]]) start: 배열의 변경을 시작할 인덱스 deleteCount: 배열에서 제거할 요소의 수, 값을 생략하면 start 부터 뒤로 모든 요소를 제거합니다. item1, item2, ...: 배열에 추가할 요소, 아무 요소도 지정하지 않으면 splice() 는 요소를 제거하기만 합니다. 예제를 통해 알아보겠습니다. const arr = [1, 2, 3, 4, 5]; arr.splice(2, 1, 10); console.log(arr); // [1, 2, 10, 4, 5] arr.splice(2, 1, 10) 은 ‘2번 인덱스부터, 1개의 요소를 삭제하고, 그자리에 10 을 추가해 주세요’ 라고 해석하면 됩니다! splice() 메서드는 보통 댓글 삭제 기능을 구현할 때 많이 사용한다고 합니다. filter filter() 메서드는 array 관련 메서드로 조건에 맞는 요소들만 모아서 새로운 배열을 반환합니다. 만약 조건에 부합되는 요소가 아무것도 없다면 빈 배열을 반환합니다. arr.filter(callback(element[, index[, array]])[, thisArg]) callback: 각 요소를 시험할 함수, true 를 반환하면 요소를 유지하고 false 를 반환하면 요소를 버립니다. element, index, array 세 가지의 매개변수를 받을 수 있습니다. thisArg: callback 을 실행할 때 this 로 사용하는 값 예제를 통해 이해해 보겠습니다. const arr = [43, 28, 7, 3, 20, 33]; function isBiggerThanTen(value) { return value &amp;gt; 10; } const result = arr.filter(isBiggerThanTen); console.log(result); // [43, 28, 20, 33] arr.filter 에 isBiggerThanTen 이라는 함수가 들어가 있습니다. filter() 메서드는 먼저 첫 번째 요소인 43 을 isBiggerThanTen 함수에 value 라는 인자로 보냅니다. isBiggerThanTen 함수는 43 이 10 보다 크니 true 를 반환하고 filter() 메서드는 43 요소를 유지합니다. 이런 과정을 마지막 요소까지 진행하면 [43, 28, 20, 33] 이라는 배열이 리턴됩니다. 그런데 콜백함수를 위의 예제와 같이 나눠서 사용하면 불편하고 가독성도 좋지 않으니 Arrow Function 으로 바꿔주겠습니다. const arr = [43, 28, 7, 3, 20, 33]; const result = arr.filter((value) =&amp;gt; value &amp;gt; 10); console.log(result); // [43, 28, 20, 33] 이렇게 간단한 코드로 바꿀 수 있습니다. concat concat() 메서드는 주어진 배열에 기존 배열을 합쳐서 새로운 배열을 반환합니다. 원본 배열에 영향을 주지 않으며 새로운 배열이나 원본 배열을 수정해도 서로 영향을 받지 않습니다. const alphabet = ['a', 'b', 'c']; const hangeul = ['ㄱ', 'ㄴ', 'ㄷ']; alphabet.concat(hangeul); // ['a', 'b', 'c', 'ㄱ', 'ㄴ', 'ㄷ'] 다음은 주의해야 할 점에 대해 알아보겠습니다. const alpha = ['a', 'b', 'c']; const arr = [1, [2, 3]]; alpha.concat(arr); // ['a', 'b', 'c', 1, [2, 3]] alpha.concat(1, [2, 3]); // ['a', 'b', 'c', 1, 2, 3] 이렇게 똑같은 배열을 넣어도 변수에 지정해서 넣을 때와 함수안에 직접 배열을 작성해서 넣을 때 리턴값에 차이가 있습니다. concat 과 filter 응용 const array1 = [1, 2, 3, 4, 5]; const array2 = [3, 4, 5, 6, 7]; const result = array1.concat(array2); console.log(result); // [1, 2, 3, 4, 5, 3, 4, 5, 6, 7]; const eraseDuplicates = result.filter( (el, index) =&amp;gt; result.indexOf(el) === index ); console.log(ereaseDuplicates); // [1, 2, 3, 4, 5, 6, 7] 코드를 이해하기 위해 indexof() 라는 메서드를 알아보겠습니다. indexof(searhElement[, fromIndex]) searchElement: 배열에서 찾을 요소입니다. fromIndex: 검색을 시작할 인덱스입니다. indexof() 메서드는 배열 내에서 찾은 최초의 인덱스 값을 반환합니다. 이제 코드를 해석해보겠습니다. filter() 메서드가 콜백함수에 result 변수의 요소와 인덱스를 차례로 넣습니다. 처음에 (1, 0)을 넣었을 때 result.indexOf(el) 값은 0 이 되고 0 === 0 이므로 true 가 반환되어 eraseDuplicates 변수에 1이 들어갑니다. 그다음 (2, 1) 을 넣었을 때도 마찬가지겠죠? (3, 2) (4, 3) (5, 4) 까지 똑같이 들어가다가 (3, 5) 가 콜백함수에 전달되었을 때 result.indexOf(el) 값은 0 이고 0 은 5와 같지 않음으로 false 가 반환되어 두 번째 3은 배열에서 없어지게 됩니다. 이런식으로 result 변수의 끝까지 반복하면 eraseDuplicates 변수에 중복된 값이 없는 배열이 들어가게 됩니다. push push() 메서드를 사용하면 배열의 끝에 하나 이상의 요소를 추가할 수 있습니다. const arr = [1, 2, 3]; arr.push(4); console.log(arr); // [1, 2, 3, 4] pop pop() 메서드는 배열의 마지막 요소를 제거하며 제거된 요소를 반환합니다. const arr = [1, 4, 6]; const result = arr.pop(); console.log(arr); // [1, 4] console.log(result); // 6 shift shift() 메서드는 배열의 첫 번째 요소를 제거하며 제거된 요소를 반환합니다. const arr = [1, 4, 6]; const result = arr.shift(); console.log(arr); // [4, 6] console.log(result); // [1]</summary></entry><entry><title type="html">TIL-04</title><link href="http://localhost:4000/til-04/" rel="alternate" type="text/html" title="TIL-04" /><published>2021-11-17T08:07:35+09:00</published><updated>2021-11-17T08:07:39+09:00</updated><id>http://localhost:4000/til-04</id><content type="html" xml:base="http://localhost:4000/til-04/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오늘-할-것-계획&quot;&gt;오늘 할 것 (계획)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;[WeCode] JavaScript On Web 공부하기&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오늘-한-일-회고&quot;&gt;오늘 한 일 (회고)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript Array 메서드 몇 가지를 다시 공부하고 &lt;a href=&quot;../javascript-1&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=wcsVjmHrUQg&amp;amp;list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2&quot; target=&quot;\_blank&quot;&gt;드림코딩 by 엘리 자바스크립트 배우기전 꼭 봐야할 영상&lt;/a&gt; 강의 시청&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;[WeCode] JavaScript Replit 끝까지 풀기&lt;/li&gt;
  &lt;li&gt;[WeCode] 웹 서비스의 역사와 발전 공부하기&lt;/li&gt;
  &lt;li&gt;[WeCode] HTML/CSS/JavaScript 그룹 면접 준비&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;memo&quot;&gt;Memo&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.curioustore.com/#!/&quot;&gt;변수명 지어주는 사이트&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;나중에 정말 생각이 안나면 사용해 봐야겠다.&lt;/p&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="TIL" /><category term="TIL" /><category term="Array" /><category term="JavaScript" /><summary type="html">오늘 할 것 (계획) [WeCode] JavaScript On Web 공부하기 오늘 한 일 (회고) JavaScript Array 메서드 몇 가지를 다시 공부하고 블로그 글 작성 드림코딩 by 엘리 자바스크립트 배우기전 꼭 봐야할 영상 강의 시청 내일 할 일 [WeCode] JavaScript Replit 끝까지 풀기 [WeCode] 웹 서비스의 역사와 발전 공부하기 [WeCode] HTML/CSS/JavaScript 그룹 면접 준비 Memo 변수명 지어주는 사이트 나중에 정말 생각이 안나면 사용해 봐야겠다.</summary></entry><entry><title type="html">display: flex</title><link href="http://localhost:4000/html-css-4/" rel="alternate" type="text/html" title="display: flex" /><published>2021-11-16T20:37:11+09:00</published><updated>2021-11-16T20:37:11+09:00</updated><id>http://localhost:4000/html-css-4</id><content type="html" xml:base="http://localhost:4000/html-css-4/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;display-flex&quot;&gt;display: flex&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex&lt;/code&gt; 를 사용하면 대부분의 레이아웃을 간편하게 만들수 있습니다. 막강한 property 인 만큼 앞으로 많이 활용하게 됩니다.&lt;/p&gt;

&lt;p&gt;많이 사용해봐야 익숙해지기 때문에 예제를 통해 알아보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 HTML 과 CSS 코드를 짜고 실행시켜봅시다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141979140-825c40ee-a29c-4308-a1bd-a9328a132cf7.png&quot; alt=&quot;127 0 0 1_5500_index html&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; 는 정렬하고 싶은 요소들의 부모 요소에 적용하는 것입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex&lt;/code&gt; 가 적용된 부모 요소를 &lt;strong&gt;flex container&lt;/strong&gt; 라고 하고, 자식 요소들을 &lt;strong&gt;flex item&lt;/strong&gt; 이라고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.wrapper&lt;/code&gt; 에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; 를 적용시켜 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141985293-a90751d8-e1b9-457e-a4f2-c4349e97bad7.png&quot; alt=&quot;127 0 0 1_5500_index html (1)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 매우 간단하게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.wrapper&lt;/code&gt; 안의 요소가 가로 정렬 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex&lt;/code&gt; 는 적용한 요소의 모든 하위 요소가 아닌 &lt;strong&gt;자식 요소&lt;/strong&gt; 에만 적용되는데요, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wrapper&lt;/code&gt; 에 자손 요소를 추가하고 css 파일에 다음 코드를 추가해 주겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;inner&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;inner&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.inner&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;aqua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.inner&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141979842-d807907e-0512-4cd4-ae1c-122c0b484a1c.png&quot; alt=&quot;127 0 0 1_5500_index html (2)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림과 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wrapper&lt;/code&gt; 요소의 자손인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inner&lt;/code&gt; 요소들은 가로로 정렬되지 않았습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;justify-content&quot;&gt;justify-content&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; 값이 적용된 요소에 사용하는 프로퍼티 입니다.&lt;/p&gt;

&lt;p&gt;이해를 돕기 위해 먼저 &lt;strong&gt;중심축(main axis)&lt;/strong&gt; 과 &lt;strong&gt;반대축(cross axis)&lt;/strong&gt; 에 대해 잠시 알아 보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141984437-ccd3543e-2c80-4aa2-87a0-65718c901aa9.png&quot; alt=&quot;변경&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex&lt;/code&gt; 를 사용하게 되면 기본적으로 가로축을 기준으로 정렬이 되는데요, 이 가로축을 &lt;strong&gt;중심축&lt;/strong&gt; 이라고 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content&lt;/code&gt; 는 아이템들이 중심축을 기준으로 어떻게 정렬될지를 정할수 있습니다. 기본값은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex-start&lt;/code&gt; 인데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex-end&lt;/code&gt; 를 적용시켜 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.wrapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141980372-ec672b0a-4767-40a0-9dc5-0a5938942fee.png&quot; alt=&quot;127 0 0 1_5500_index html (3)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 중심축 기준으로 오른쪽 정렬이 되는 것을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content: center&lt;/code&gt; 적용&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141981170-5b75fdf3-edc2-4fa4-902c-19ef1879a3fe.png&quot; alt=&quot;127 0 0 1_5500_index html (4)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content: space-between&lt;/code&gt; 적용&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141981213-fccb993d-1bd1-4f22-8a47-280fb952dc4e.png&quot; alt=&quot;127 0 0 1_5500_index html (5)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content: space-around&lt;/code&gt; 적용&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141981321-fe650644-e3e1-4e87-8ab7-449585ed1bec.png&quot; alt=&quot;127 0 0 1_5500_index html (6)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content: space-evenly&lt;/code&gt; 적용&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141998823-13dd2758-fc8c-4e92-8b33-8d47fd71bd87.png&quot; alt=&quot;127 0 0 1_5500_index html (2)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;align-items&quot;&gt;align-items&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;justify-content&lt;/code&gt; 가 중심축 기준 정렬이였다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;align-items&lt;/code&gt; 는 반대축 기준 정렬입니다.&lt;/p&gt;

&lt;p&gt;어떻게 정렬되는 것인지 알아보기 위해 css 코드를 수정하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 1번 아이템과 3번 아이템에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;width&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;height&lt;/code&gt; 프로퍼티를 추가해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141982581-a449aa37-794a-4ba1-8bf1-b66dac7e7fcb.png&quot; alt=&quot;127 0 0 1_5500_index html (7)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이해하기 쉽게 빨간 선을 그어놓았는데요, 기본값인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flex-start&lt;/code&gt; 일 경우 flex container 의 윗 부분과 flex item 들의 윗 부분이 겹치는 지점으로 정렬됩니다. (반대축 방향으로 이동함)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;align-items: flex-end&lt;/code&gt; 를 적용했을 경우&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141983440-8c095c69-55ee-4008-b8ae-c6280868eadf.png&quot; alt=&quot;127 0 0 1_5500_index html (8)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;flex container 와 flex item 들의 아랫부분이 겹치는 지점으로 정렬됩니다. (반대축 방향으로 이동함)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;align-items: center&lt;/code&gt; 를 적용했을 때는&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/87692499/141983963-1117f53b-c2f4-4882-9a69-517769152ddc.png&quot; alt=&quot;127 0 0 1_5500_index html (9)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 되겠죠?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2BHyrE-nR3Q&quot; target=&quot;\_blank&quot;&gt;ANZI 님 유튜브&lt;/a&gt;&lt;/p&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="HTML CSS" /><category term="HTMLCSS" /><category term="Flex" /><summary type="html">display: flex flex 를 사용하면 대부분의 레이아웃을 간편하게 만들수 있습니다. 막강한 property 인 만큼 앞으로 많이 활용하게 됩니다. 많이 사용해봐야 익숙해지기 때문에 예제를 통해 알아보겠습니다. &amp;lt;body&amp;gt; &amp;lt;div class=&quot;wrapper&quot;&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt;1&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt;2&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt;3&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; .wrapper { border: 1px solid black; width: 400px; height: 400px; } .item { width: 100px; height: 100px; } .item:nth-child(1) { background-color: red; } .item:nth-child(2) { background-color: green; } .item:nth-child(3) { background-color: blue; } 이렇게 HTML 과 CSS 코드를 짜고 실행시켜봅시다. display: flex 는 정렬하고 싶은 요소들의 부모 요소에 적용하는 것입니다. flex 가 적용된 부모 요소를 flex container 라고 하고, 자식 요소들을 flex item 이라고 합니다. .wrapper 에 display: flex 를 적용시켜 보겠습니다. .wrapper { border: 1px solid black; width: 400px; height: 400px; display: flex; } 이렇게 매우 간단하게 .wrapper 안의 요소가 가로 정렬 되었습니다. flex 는 적용한 요소의 모든 하위 요소가 아닌 자식 요소 에만 적용되는데요, wrapper 에 자손 요소를 추가하고 css 파일에 다음 코드를 추가해 주겠습니다. &amp;lt;body&amp;gt; &amp;lt;div class=&quot;wrapper&quot;&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt;1&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt; &amp;lt;div class=&quot;inner&quot;&amp;gt;1&amp;lt;/div&amp;gt; &amp;lt;div class=&quot;inner&quot;&amp;gt;2&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;item&quot;&amp;gt;3&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; .inner:nth-child(1) { background-color: aqua; } .inner:nth-child(2) { background-color: yellow; } 위 그림과 같이 wrapper 요소의 자손인 inner 요소들은 가로로 정렬되지 않았습니다. justify-content justify-content 는 display: flex 값이 적용된 요소에 사용하는 프로퍼티 입니다. 이해를 돕기 위해 먼저 중심축(main axis) 과 반대축(cross axis) 에 대해 잠시 알아 보겠습니다. flex 를 사용하게 되면 기본적으로 가로축을 기준으로 정렬이 되는데요, 이 가로축을 중심축 이라고 합니다. justify-content 는 아이템들이 중심축을 기준으로 어떻게 정렬될지를 정할수 있습니다. 기본값은 flex-start 인데 flex-end 를 적용시켜 보겠습니다. .wrapper { border: 1px solid black; width: 400px; height: 400px; display: flex; justify-content: flex-end; } 이렇게 중심축 기준으로 오른쪽 정렬이 되는 것을 알 수 있습니다. justify-content: center 적용 justify-content: space-between 적용 justify-content: space-around 적용 justify-content: space-evenly 적용 align-items justify-content 가 중심축 기준 정렬이였다면, align-items 는 반대축 기준 정렬입니다. 어떻게 정렬되는 것인지 알아보기 위해 css 코드를 수정하겠습니다. .item:nth-child(1) { width: 50px; height: 50px; background-color: red; } .item:nth-child(3) { width: 120px; height: 120px; background-color: blue; } 이렇게 1번 아이템과 3번 아이템에 width, height 프로퍼티를 추가해줍니다. 이해하기 쉽게 빨간 선을 그어놓았는데요, 기본값인 flex-start 일 경우 flex container 의 윗 부분과 flex item 들의 윗 부분이 겹치는 지점으로 정렬됩니다. (반대축 방향으로 이동함) align-items: flex-end 를 적용했을 경우 flex container 와 flex item 들의 아랫부분이 겹치는 지점으로 정렬됩니다. (반대축 방향으로 이동함) 그러면 align-items: center 를 적용했을 때는 이렇게 되겠죠? Reference ANZI 님 유튜브</summary></entry><entry><title type="html">HTML &amp;amp; CSS</title><link href="http://localhost:4000/html-css-3/" rel="alternate" type="text/html" title="HTML &amp;amp; CSS" /><published>2021-11-16T11:36:11+09:00</published><updated>2021-11-16T11:36:11+09:00</updated><id>http://localhost:4000/html-css-3</id><content type="html" xml:base="http://localhost:4000/html-css-3/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CSS 는 정답이 없습니다. 결과 화면이 똑같더라도 개발자마다 구현한 CSS 가 천차만별일 수도 있습니다. 대신 어느 브라우저나 디바이스에서 보거나, 어느 크기에서 봐도 화면이 겹치거나 깨지지 않도록 신경을 써야합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;block-과-inline&quot;&gt;Block 과 Inline&lt;/h1&gt;

&lt;p&gt;대부분의 HTML 요소는 block 요소입니다.&lt;/p&gt;

&lt;p&gt;block 요소는 요소 하나가 그 줄 전체를 차지합니다. 따라서 block 요소 옆에는 다른 요소가 올 수 없습니다.&lt;/p&gt;

&lt;p&gt;block 요소에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;li&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;등이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;inline 요소는 요소끼리 서로 한 줄에, 즉 바로 옆에 위치할 수 있습니다.&lt;/p&gt;

&lt;p&gt;inline 요소에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;등이 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 꼭 이런 태그 하나하나를 신경 써가며 사용할 필요는 없습니다. CSS 로 block 과 inline 요소의 성질을 바꿀 수 있기 때문입니다.&lt;/p&gt;

&lt;p&gt;block 요소에 inline 의 성질을 가지게 하는 CSS property 에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: inline-block&lt;/code&gt; 과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt; 가 있습니다.&lt;/p&gt;

&lt;p&gt;반대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: block&lt;/code&gt; 을 사용해 inline 요소가 block 의 성질을 가지게 할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;display-none&quot;&gt;display: none&lt;/h1&gt;

&lt;p&gt;요소에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: none&lt;/code&gt; 이라는 값을 주면, 해당 요소는 화면에서 보이지 않게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: none&lt;/code&gt; 은 보통 &lt;strong&gt;ineractive 한 웹을 구현하기 위해 사용&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;숨겨놓고 싶은 요소를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: none&lt;/code&gt; 으로 숨겨놨다가 원하는 때에 JavaScript 를 이용해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: block&lt;/code&gt; 으로 변경해주면 요소가 화면에 나타나게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;margin-0-auto&quot;&gt;margin: 0 auto&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;width&lt;/code&gt; 값을 가지는 block 요소에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin: 0 auto&lt;/code&gt; 값을 주게되면 요소의 왼쪽 오른쪽에 같은 값의 마진이 자동으로 생성되어 요소를 가로 중앙에 위치시킬수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;list-styling&quot;&gt;List styling&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ul&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ol&lt;/code&gt; 에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list-style: none&lt;/code&gt; 을 적용하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;li&lt;/code&gt; 요소들 앞에 붙었던 숫자나 점을 없앨 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;기본 스타일 대신 이런식으로 선을 그어 list 를 표현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ul&lt;/code&gt; 태그와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ol&lt;/code&gt; 태그에는 기본적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin&lt;/code&gt; 과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;padding&lt;/code&gt; 값이 적용되어 있는데요, 보기좋게 바꿔주면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;first-child-last-child-nth-child&quot;&gt;:first-child, :last-child, :nth-child()&lt;/h1&gt;

&lt;p&gt;CSS selector 표기 방법중에 해당 selector 중 몇 번째 순서인지 알 수 있는 selector 표기법이 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런식으로 사용하면 되는데요, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:first-child&lt;/code&gt; 는 첫 번째 selector, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:last-child&lt;/code&gt; 는 마지막, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:nth-child()&lt;/code&gt; 는 () 안에 원하는 순서를 넣으면 됩니다.&lt;/p&gt;

&lt;p&gt;여기서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:nth-child()&lt;/code&gt; 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;odd&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;even&lt;/code&gt; 이라는 값을 넣으면 각각 홀수/짝수 번째 selector 가 모두 지정됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;table&quot;&gt;Table&lt;/h1&gt;

&lt;p&gt;테이블을 표현하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;tbody&amp;gt;, &amp;lt;tr&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;td&amp;gt;&lt;/code&gt; 등 여러 태그들의 조합이 필요합니다.&lt;/p&gt;

&lt;p&gt;한 행을 시작할 때는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 태그를 사용하는데요, tr 은 table row 의 줄임말 입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 태그 내에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 태그를 사용해 행을 각각의 셀로 나눌 수 있습니다. td 는 table data 의 줄임말 입니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 태그를 사용하면 그 셀은 제목을 나타낸다는 것을 표현할 수 있습니다. th 는 table heading 의 줄임말 입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 태그를 사용하면 해당 셀은 가운데 정렬이 되고 글씨 두께가 두꺼워집니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;셀을 병합하려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;colspan&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rowspan&lt;/code&gt; attribute 를 사용하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rowspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&amp;gt;&lt;/span&gt;제목&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rowspan&lt;/code&gt; 은 세로로 병합, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;colspan&lt;/code&gt; 은 가로로 병합합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;input&quot;&gt;Input&lt;/h1&gt;

&lt;h2 id=&quot;input-1&quot;&gt;&amp;lt;input&amp;gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 태그를 사용하면 사용자가 직접 텍스트를 입력할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ID&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; 값은 text, password, number 등이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 태그에는 닫는 태그가 없어서 내용을 적을 수 없는데요, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; attribute 를 사용하면 미리 내용을 입력할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;placeholder&lt;/code&gt; 의 색상을 바꾸고 싶으면&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::placeholder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#bbb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 콜론 두 개를 붙여서 selector 를 만들 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;textarea&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 보다 긴 텍스트를 입력받고 싶을 때 사용합니다. 보통 짧은 방명록이나 댓글을 구현할 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 를 사용합니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/span&gt;제목:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;브라우저에서 창의 크기를 조절할 수 있는 resize 기능이 default 값으로 설정되어 있는데요, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resize: none&lt;/code&gt; 을 사용해 없앨 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;hover&quot;&gt;:hover&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:hover&lt;/code&gt; 은 &lt;strong&gt;마우스를 요소에 올렸을 때&lt;/strong&gt; 를 말하는 selector 입니다. 이렇게 상태에 따른 selector 들도 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;position&quot;&gt;Position&lt;/h1&gt;

&lt;h2 id=&quot;position-relative&quot;&gt;position: relative&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; 만 사용한다고 위치가 변경되지는 않습니다. 위치를 이동시켜주는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top, right, bottom, left&lt;/code&gt; 프로퍼티가 있어야 원래의 위치에서 이동할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top, right, bottom, left&lt;/code&gt; 프로퍼티는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position&lt;/code&gt; 프로퍼티가 있을 때에만 적용됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;position-absolute&quot;&gt;position: absolute&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: absolute&lt;/code&gt; 를 사용하면 요소를 절대적인 위치에 둘 수 있습니다. 절대적인 위치의 기준은 특정 부모가 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position&lt;/code&gt; 값이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relative, fixed, absolute&lt;/code&gt; 인 부모가 있으면 그 부모가 위치의 기준이 됩니다.&lt;/p&gt;

&lt;p&gt;일반적으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;absolute&lt;/code&gt; 를 사용할 때, 기준이 될 부모에게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; 를 부여합니다.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;요소가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: absolute&lt;/code&gt; 값을 가지게 되면 inline element 처럼 내용의 크기만큼의 공간만 차지하게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;position-fixed&quot;&gt;position: fixed&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: fixed&lt;/code&gt; 를 사용하면 요소를 화면에 고정시킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;absolute&lt;/code&gt; 는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; 인 부모가 필요했는데 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fixed&lt;/code&gt; 는 필요없습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면 요소의 왼쪽은 화면 왼쪽 끝에 붙고 오른쪽은 화면의 오른쪽 끝, 윗 부분은 화면 상단에 붙어 높이 50px 의 header 가 화면 상단에 고정됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;요소를-중앙으로-이동시키기&quot;&gt;요소를 중앙으로 이동시키기&lt;/h1&gt;

&lt;p&gt;요소를 부모 요소의 중간에 위치시키고 싶을 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: absolute&lt;/code&gt; 를 사용한 뒤 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;px&lt;/code&gt; 단위 대신에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt; 를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 요소의 앞에 부모 요소 크기의 50% 만큼의 공간이 생기는 것이기 때문에 실제로 보면 중앙이라고 할 수 없습니다.&lt;/p&gt;

&lt;p&gt;이런 문제를 해결하려면 이동한 요소를 자신 너비의 절반만큼 뒤로 움직여주어야 합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그의 크기가 50px 이라면&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-25px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin-left&lt;/code&gt; 에 - 값을 넣어주어 뒤로 이동시키면 됩니다.&lt;/p&gt;

&lt;p&gt;이 방법 말고도 inline 요소일 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-align: center&lt;/code&gt; 를 사용하고 block 요소의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;width&lt;/code&gt; 값이 있다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;margin: 0 auto&lt;/code&gt; 를 사용할 수도 있습니다. 상황에 맞게 사용하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="HTML CSS" /><category term="HTML CSS" /><summary type="html">CSS 는 정답이 없습니다. 결과 화면이 똑같더라도 개발자마다 구현한 CSS 가 천차만별일 수도 있습니다. 대신 어느 브라우저나 디바이스에서 보거나, 어느 크기에서 봐도 화면이 겹치거나 깨지지 않도록 신경을 써야합니다. Block 과 Inline 대부분의 HTML 요소는 block 요소입니다. block 요소는 요소 하나가 그 줄 전체를 차지합니다. 따라서 block 요소 옆에는 다른 요소가 올 수 없습니다. block 요소에는 &amp;lt;header&amp;gt; &amp;lt;footer&amp;gt; &amp;lt;p&amp;gt; &amp;lt;li&amp;gt; &amp;lt;table&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1&amp;gt; 등이 있습니다. inline 요소는 요소끼리 서로 한 줄에, 즉 바로 옆에 위치할 수 있습니다. inline 요소에는 &amp;lt;span&amp;gt; &amp;lt;a&amp;gt; &amp;lt;img&amp;gt; 등이 있습니다. 하지만 꼭 이런 태그 하나하나를 신경 써가며 사용할 필요는 없습니다. CSS 로 block 과 inline 요소의 성질을 바꿀 수 있기 때문입니다. block 요소에 inline 의 성질을 가지게 하는 CSS property 에는 display: inline-block 과 float 가 있습니다. 반대로 display: block 을 사용해 inline 요소가 block 의 성질을 가지게 할 수도 있습니다. display: none 요소에 display: none 이라는 값을 주면, 해당 요소는 화면에서 보이지 않게 됩니다. display: none 은 보통 ineractive 한 웹을 구현하기 위해 사용합니다. 숨겨놓고 싶은 요소를 display: none 으로 숨겨놨다가 원하는 때에 JavaScript 를 이용해 display: block 으로 변경해주면 요소가 화면에 나타나게 됩니다. margin: 0 auto width 값을 가지는 block 요소에 margin: 0 auto 값을 주게되면 요소의 왼쪽 오른쪽에 같은 값의 마진이 자동으로 생성되어 요소를 가로 중앙에 위치시킬수 있습니다. List styling ul, ol 에 list-style: none 을 적용하면 li 요소들 앞에 붙었던 숫자나 점을 없앨 수 있습니다. ul { list-style: none; border-left: 3px solid black; padding: 15px; } 기본 스타일 대신 이런식으로 선을 그어 list 를 표현할 수 있습니다. ul 태그와 ol 태그에는 기본적으로 margin 과 padding 값이 적용되어 있는데요, 보기좋게 바꿔주면 됩니다. :first-child, :last-child, :nth-child() CSS selector 표기 방법중에 해당 selector 중 몇 번째 순서인지 알 수 있는 selector 표기법이 있습니다. li:last-child { padding-bottom: 0; } 이런식으로 사용하면 되는데요, :first-child 는 첫 번째 selector, :last-child 는 마지막, :nth-child() 는 () 안에 원하는 순서를 넣으면 됩니다. 여기서 :nth-child() 안에 odd 와 even 이라는 값을 넣으면 각각 홀수/짝수 번째 selector 가 모두 지정됩니다. Table 테이블을 표현하기 위해서는 &amp;lt;table&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;tbody&amp;gt;, &amp;lt;tr&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;td&amp;gt; 등 여러 태그들의 조합이 필요합니다. 한 행을 시작할 때는 &amp;lt;tr&amp;gt; 태그를 사용하는데요, tr 은 table row 의 줄임말 입니다. &amp;lt;tr&amp;gt; 태그 내에 &amp;lt;td&amp;gt; 태그를 사용해 행을 각각의 셀로 나눌 수 있습니다. td 는 table data 의 줄임말 입니다. &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;3&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;td&amp;gt; 대신에 &amp;lt;th&amp;gt; 태그를 사용하면 그 셀은 제목을 나타낸다는 것을 표현할 수 있습니다. th 는 table heading 의 줄임말 입니다. &amp;lt;th&amp;gt; 태그를 사용하면 해당 셀은 가운데 정렬이 되고 글씨 두께가 두꺼워집니다. &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; 셀을 병합하려면 colspan, rowspan attribute 를 사용하면 됩니다. &amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;td rowspan=&quot;2&quot;&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;제목&amp;lt;/th&amp;gt; &amp;lt;td&amp;gt;내용&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; rowspan 은 세로로 병합, colspan 은 가로로 병합합니다. Input &amp;lt;input&amp;gt; &amp;lt;input&amp;gt; 과 &amp;lt;textarea&amp;gt; 태그를 사용하면 사용자가 직접 텍스트를 입력할 수 있습니다. &amp;lt;input type=&quot;text&quot; placeholder=&quot;ID&quot; /&amp;gt; &amp;lt;input&amp;gt; 의 type 값은 text, password, number 등이 있습니다. &amp;lt;input&amp;gt; 태그에는 닫는 태그가 없어서 내용을 적을 수 없는데요, value attribute 를 사용하면 미리 내용을 입력할 수 있습니다. placeholder 의 색상을 바꾸고 싶으면 input::placeholder { color: #bbb; } 이렇게 콜론 두 개를 붙여서 selector 를 만들 수 있습니다. &amp;lt;textarea&amp;gt; &amp;lt;textarea&amp;gt; 는 &amp;lt;input&amp;gt; 보다 긴 텍스트를 입력받고 싶을 때 사용합니다. 보통 짧은 방명록이나 댓글을 구현할 때 &amp;lt;textarea&amp;gt; 를 사용합니다. &amp;lt;textarea&amp;gt;제목:&amp;lt;/textarea&amp;gt; 브라우저에서 창의 크기를 조절할 수 있는 resize 기능이 default 값으로 설정되어 있는데요, resize: none 을 사용해 없앨 수 있습니다. :hover :hover 은 마우스를 요소에 올렸을 때 를 말하는 selector 입니다. 이렇게 상태에 따른 selector 들도 있습니다. button:hover { cursor: pointer; opacity: 0.8; } Position position: relative position: relative 만 사용한다고 위치가 변경되지는 않습니다. 위치를 이동시켜주는 top, right, bottom, left 프로퍼티가 있어야 원래의 위치에서 이동할 수 있습니다. .box { position: relative; top: 10px; left: 20px; } top, right, bottom, left 프로퍼티는 position 프로퍼티가 있을 때에만 적용됩니다. position: absolute position: absolute 를 사용하면 요소를 절대적인 위치에 둘 수 있습니다. 절대적인 위치의 기준은 특정 부모가 됩니다. position 값이 relative, fixed, absolute 인 부모가 있으면 그 부모가 위치의 기준이 됩니다. 일반적으로 absolute 를 사용할 때, 기준이 될 부모에게 position: relative 를 부여합니다. 요소가 position: absolute 값을 가지게 되면 inline element 처럼 내용의 크기만큼의 공간만 차지하게 됩니다. position: fixed position: fixed 를 사용하면 요소를 화면에 고정시킬 수 있습니다. absolute 는 position: relative 인 부모가 필요했는데 fixed 는 필요없습니다. header { position: fixed; left: 0; right: 0; top: 0; height: 50px; } 이렇게 하면 요소의 왼쪽은 화면 왼쪽 끝에 붙고 오른쪽은 화면의 오른쪽 끝, 윗 부분은 화면 상단에 붙어 높이 50px 의 header 가 화면 상단에 고정됩니다. 요소를 중앙으로 이동시키기 요소를 부모 요소의 중간에 위치시키고 싶을 때 position: absolute 를 사용한 뒤 px 단위 대신에 % 를 사용할 수 있습니다. 하지만 요소의 앞에 부모 요소 크기의 50% 만큼의 공간이 생기는 것이기 때문에 실제로 보면 중앙이라고 할 수 없습니다. 이런 문제를 해결하려면 이동한 요소를 자신 너비의 절반만큼 뒤로 움직여주어야 합니다. 예를 들어 &amp;lt;img&amp;gt; 태그의 크기가 50px 이라면 img { position: absolute; left: 50%; margin-left: -25px; } 이렇게 margin-left 에 - 값을 넣어주어 뒤로 이동시키면 됩니다. 이 방법 말고도 inline 요소일 경우 text-align: center 를 사용하고 block 요소의 경우 width 값이 있다면 margin: 0 auto 를 사용할 수도 있습니다. 상황에 맞게 사용하면 됩니다.</summary></entry><entry><title type="html">시맨틱 웹(Semantic Web), 시맨틱 태그(Semantic Tag)</title><link href="http://localhost:4000/html-css-2/" rel="alternate" type="text/html" title="시맨틱 웹(Semantic Web), 시맨틱 태그(Semantic Tag)" /><published>2021-11-16T01:55:34+09:00</published><updated>2021-11-16T01:55:34+09:00</updated><id>http://localhost:4000/html-css-2</id><content type="html" xml:base="http://localhost:4000/html-css-2/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“사이트에 이미지를 넣는 방법은 두 가지가 있습니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그를 사용하는 것과 태그에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt; 속성을 추가하는 것. 두 가지 방법의 차이점과 각각 어떠한 경우에 사용하면 좋은지 설명해보세요.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;질문에 답을 하기 위해 먼저 &lt;strong&gt;Semantic Web&lt;/strong&gt; 과 &lt;strong&gt;Semantic Tag&lt;/strong&gt; 에 대해 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;semantic-web-semantic-tag&quot;&gt;Semantic Web, Semantic Tag&lt;/h1&gt;

&lt;h2 id=&quot;semantic-web-의-목적&quot;&gt;Semantic Web 의 목적&lt;/h2&gt;

&lt;p&gt;인터넷이 폭발적으로 보급되고 웹상에 축적되는 정보의 양이 방대해짐에 따라 정보를 검색할 때 불필요하거나 덜 연관성 있는 정보를 거를 필요성이 점점 대두되었습니다.&lt;/p&gt;

&lt;p&gt;사람이 웹의 정보를 보고 판단하는 것이 아니라, 자동화된 기계가 그 의미를 해석하고 정보간의 관계를 이해할 수 있도록 하는 것이 시맨틱 웹의 목적입니다.&lt;/p&gt;

&lt;h2 id=&quot;semantic-tag&quot;&gt;Semantic Tag&lt;/h2&gt;

&lt;p&gt;이런 시맨틱 웹을 위해 시맨틱 태그들이 만들어지게 되었는데요, 과거 시맨틱 웹이 고안되기 전에&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런식으로 사용했던 것을&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 시맨틱 태그를 사용해 컴퓨터가 이 부분이 header 라는 것을 이해할 수 있게 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;시맨틱 태그의 종류에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;등이 있습니다.&lt;/p&gt;

&lt;p&gt;단순한 코드의 구성이 아닌 의미를 가진 사이트를 만들기 위해서는 이런 시맨틱 태그들을 잘 사용해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;img-vs-background-image&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;그렇다면 이미지를 넣는 두 가지 방법의 차이점은 무엇일까요?&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt&lt;/code&gt; 속성을 가지고 있는 시맨틱 태그입니다. 이미지에 의미를 부여할 수 있는데요, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt; 프로퍼티는 단순히 이미지만 넣을 뿐 의미를 부여할 수 없습니다.&lt;/p&gt;

&lt;p&gt;따라서 글 내용과 연관성이 있어 사용자가 컨텐츠를 이해하는데 도움을 주는 이미지의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 태그를 사용하고 글의 내용과 상관없는 배경화면 등의 이미지라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt; 프로퍼티를 사용하는 것이 좋습니다.&lt;/p&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="HTML CSS" /><category term="HTML CSS" /><category term="Semantic Web" /><category term="Semantic Tag" /><summary type="html">“사이트에 이미지를 넣는 방법은 두 가지가 있습니다. &amp;lt;img&amp;gt; 태그를 사용하는 것과 태그에 background-image 속성을 추가하는 것. 두 가지 방법의 차이점과 각각 어떠한 경우에 사용하면 좋은지 설명해보세요.” 질문에 답을 하기 위해 먼저 Semantic Web 과 Semantic Tag 에 대해 알아보겠습니다. Semantic Web, Semantic Tag Semantic Web 의 목적 인터넷이 폭발적으로 보급되고 웹상에 축적되는 정보의 양이 방대해짐에 따라 정보를 검색할 때 불필요하거나 덜 연관성 있는 정보를 거를 필요성이 점점 대두되었습니다. 사람이 웹의 정보를 보고 판단하는 것이 아니라, 자동화된 기계가 그 의미를 해석하고 정보간의 관계를 이해할 수 있도록 하는 것이 시맨틱 웹의 목적입니다. Semantic Tag 이런 시맨틱 웹을 위해 시맨틱 태그들이 만들어지게 되었는데요, 과거 시맨틱 웹이 고안되기 전에 &amp;lt;div id=&quot;header&quot;&amp;gt;&amp;lt;/div&amp;gt; 이런식으로 사용했던 것을 &amp;lt;header&amp;gt;&amp;lt;/header&amp;gt; 이렇게 시맨틱 태그를 사용해 컴퓨터가 이 부분이 header 라는 것을 이해할 수 있게 되었습니다. 시맨틱 태그의 종류에는 &amp;lt;header&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;section&amp;gt; &amp;lt;article&amp;gt; &amp;lt;aside&amp;gt; &amp;lt;main&amp;gt; &amp;lt;footer&amp;gt; &amp;lt;img&amp;gt; &amp;lt;video&amp;gt; 등이 있습니다. 단순한 코드의 구성이 아닌 의미를 가진 사이트를 만들기 위해서는 이런 시맨틱 태그들을 잘 사용해야 합니다. &amp;lt;img&amp;gt; vs background-image 그렇다면 이미지를 넣는 두 가지 방법의 차이점은 무엇일까요? &amp;lt;img&amp;gt; 태그는 alt 속성을 가지고 있는 시맨틱 태그입니다. 이미지에 의미를 부여할 수 있는데요, background-image 프로퍼티는 단순히 이미지만 넣을 뿐 의미를 부여할 수 없습니다. 따라서 글 내용과 연관성이 있어 사용자가 컨텐츠를 이해하는데 도움을 주는 이미지의 경우 &amp;lt;img&amp;gt; 태그를 사용하고 글의 내용과 상관없는 배경화면 등의 이미지라면 background-image 프로퍼티를 사용하는 것이 좋습니다.</summary></entry><entry><title type="html">TIL-03</title><link href="http://localhost:4000/til-03/" rel="alternate" type="text/html" title="TIL-03" /><published>2021-11-16T01:15:34+09:00</published><updated>2021-11-16T01:15:34+09:00</updated><id>http://localhost:4000/til-03</id><content type="html" xml:base="http://localhost:4000/til-03/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오늘-한-일-회고&quot;&gt;오늘 한 일 (회고)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;시맨틱 웹과 시맨틱 태그에 대해 공부하고 &lt;a href=&quot;../html-css-2&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
  &lt;li&gt;HTML 과 CSS 공부하고 &lt;a href=&quot;../html-css-3&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
  &lt;li&gt;CSS Flex 에 대해 공부하고 &lt;a href=&quot;../html-css-4&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
&lt;/ul&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="TIL" /><category term="TIL" /><category term="HTML CSS" /><category term="Semantic Web" /><category term="Semantic Tag" /><category term="Flex" /><summary type="html">오늘 한 일 (회고) 시맨틱 웹과 시맨틱 태그에 대해 공부하고 블로그 글 작성 HTML 과 CSS 공부하고 블로그 글 작성 CSS Flex 에 대해 공부하고 블로그 글 작성</summary></entry><entry><title type="html">HTML &amp;amp; CSS 기초</title><link href="http://localhost:4000/html-css-1/" rel="alternate" type="text/html" title="HTML &amp;amp; CSS 기초" /><published>2021-11-15T18:17:53+09:00</published><updated>2021-11-15T18:17:53+09:00</updated><id>http://localhost:4000/html-css-1</id><content type="html" xml:base="http://localhost:4000/html-css-1/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;font-family&quot;&gt;font-family&lt;/h1&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Times New Roman'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'Times New Roman'&lt;/code&gt; 만 따옴표로 감싸져 있는데, 폰트 이름에 공백이 들어가면 반드시 따옴표로 감싸주어야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;color&quot;&gt;color&lt;/h1&gt;

&lt;p&gt;색을 표현하는 방법에는 여러가지가 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hex 색상코드: 여섯자리로 표현 ex) #bebbb1&lt;/li&gt;
  &lt;li&gt;rgb 값: 빨강, 초록, 파랑으로 표현 ex) rgb(244, 32, 39)&lt;/li&gt;
  &lt;li&gt;hsl: 색상, 채도, 명도(hue, saturation, lightness)로 표현 ex) hsl(2, 79%, 30%)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;text-indent&quot;&gt;text-indent&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-indent&lt;/code&gt; 를 사용하면 CSS 에서 들여쓰기를 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;문장 사이에 공백을 여러개 추가하고 싶으면 공백 대신 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;nbsp;&lt;/code&gt; 를 원하는 만큼 넣어주면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;border&quot;&gt;Border&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;border: 두께 선 스타일 선 색깔&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;border 의 값 순서는 중요하지 않지만 coding convention(코딩 규칙)에 따라 순서를 맞춰주는 것이 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;선 스타일 종류&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dotted&lt;/li&gt;
  &lt;li&gt;dashed&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;solid&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;double&lt;/li&gt;
  &lt;li&gt;groove&lt;/li&gt;
  &lt;li&gt;ridge&lt;/li&gt;
  &lt;li&gt;inset&lt;/li&gt;
  &lt;li&gt;outset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;텍스트에 밑줄을 쳐주는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-decoration&lt;/code&gt; 는 밑줄의 두께나 색깔 등을 원하는대로 커스터마이징 하기 어렵습니다.&lt;/p&gt;

&lt;p&gt;개발자들은 대부분 원하는대로 디자인 할 수 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;border-bottom&lt;/code&gt; 으로 밑줄을 구현하는 것을 선호합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;box-sizing&quot;&gt;box-sizing&lt;/h1&gt;

&lt;p&gt;눈으로 보이는 너비가 개발자가 코딩하는 값과 일치해야 코딩과 머리속으로 생각하는 로직이 같아집니다. 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;box-sizing&lt;/code&gt; 은 항상 적용해야하는 프로퍼티입니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;꼭 적용하고 시작하기!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;css-specificity&quot;&gt;CSS Specificity&lt;/h1&gt;

&lt;p&gt;selector 표현에는 우선순위가 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;inline styling: 1 0 0 0&lt;/li&gt;
  &lt;li&gt;id: 0 1 0 0&lt;/li&gt;
  &lt;li&gt;class: 0 0 1 0&lt;/li&gt;
  &lt;li&gt;tag: 0 0 0 1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;tag selector 가 아무리 많아도 class selector 하나를 이길 수 없습니다.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;애초에 이런 계산이 필요하지 않도록 클래스를 사용해 최대한 중복을 피하는 것이 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;img&quot;&gt;img&lt;/h1&gt;

&lt;p&gt;너무 큰 이미지를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt; 로 넣으면 하면 원본 이미지 크기가 줄지 않고 박스 크기만큼 짤려서 보입니다. 그럴경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-size&lt;/code&gt; 프로퍼티를 추가해줍니다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.bg-img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(./img/profile.png)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="HTML CSS" /><category term="HTML CSS" /><summary type="html">font-family #title { font-family: Georgia, 'Times New Roman', Times, serif; } 'Times New Roman' 만 따옴표로 감싸져 있는데, 폰트 이름에 공백이 들어가면 반드시 따옴표로 감싸주어야 합니다. color 색을 표현하는 방법에는 여러가지가 있습니다. hex 색상코드: 여섯자리로 표현 ex) #bebbb1 rgb 값: 빨강, 초록, 파랑으로 표현 ex) rgb(244, 32, 39) hsl: 색상, 채도, 명도(hue, saturation, lightness)로 표현 ex) hsl(2, 79%, 30%) text-indent text-indent 를 사용하면 CSS 에서 들여쓰기를 할 수 있습니다. .title { text-indent: 50px; } 문장 사이에 공백을 여러개 추가하고 싶으면 공백 대신 &amp;amp;nbsp; 를 원하는 만큼 넣어주면 됩니다. Border border: 두께 선 스타일 선 색깔 border 의 값 순서는 중요하지 않지만 coding convention(코딩 규칙)에 따라 순서를 맞춰주는 것이 좋습니다. 선 스타일 종류 dotted dashed solid double groove ridge inset outset 텍스트에 밑줄을 쳐주는 text-decoration 는 밑줄의 두께나 색깔 등을 원하는대로 커스터마이징 하기 어렵습니다. 개발자들은 대부분 원하는대로 디자인 할 수 있는 border-bottom 으로 밑줄을 구현하는 것을 선호합니다. box-sizing 눈으로 보이는 너비가 개발자가 코딩하는 값과 일치해야 코딩과 머리속으로 생각하는 로직이 같아집니다. 따라서 box-sizing 은 항상 적용해야하는 프로퍼티입니다. * { box-sizing: border-box; } 꼭 적용하고 시작하기! CSS Specificity selector 표현에는 우선순위가 있습니다. inline styling: 1 0 0 0 id: 0 1 0 0 class: 0 0 1 0 tag: 0 0 0 1 tag selector 가 아무리 많아도 class selector 하나를 이길 수 없습니다. 애초에 이런 계산이 필요하지 않도록 클래스를 사용해 최대한 중복을 피하는 것이 좋습니다. img 너무 큰 이미지를 background-image 로 넣으면 하면 원본 이미지 크기가 줄지 않고 박스 크기만큼 짤려서 보입니다. 그럴경우 background-size 프로퍼티를 추가해줍니다. .bg-img { width: 300px; height: 300px; background-image: url(./img/profile.png); background-size: 100%; }</summary></entry><entry><title type="html">TIL-02</title><link href="http://localhost:4000/til-02/" rel="alternate" type="text/html" title="TIL-02" /><published>2021-11-15T17:17:53+09:00</published><updated>2021-11-15T17:17:53+09:00</updated><id>http://localhost:4000/til-02</id><content type="html" xml:base="http://localhost:4000/til-02/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오늘-한-일-회고&quot;&gt;오늘 한 일 (회고)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;HTML 과 CSS 기초를 다시 복습하고 &lt;a href=&quot;../html-css-1&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
&lt;/ul&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="TIL" /><category term="TIL" /><category term="HTML CSS" /><summary type="html">오늘 한 일 (회고) HTML 과 CSS 기초를 다시 복습하고 블로그 글 작성</summary></entry><entry><title type="html">TIL-01</title><link href="http://localhost:4000/til-01/" rel="alternate" type="text/html" title="TIL-01" /><published>2021-11-13T13:06:24+09:00</published><updated>2021-11-13T13:06:24+09:00</updated><id>http://localhost:4000/til-01</id><content type="html" xml:base="http://localhost:4000/til-01/">&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;오늘-한-일-회고&quot;&gt;오늘 한 일 (회고)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;위코드에서 배운 내용을 가지고 HTML 과 CSS 를 이용해 자기소개 페이지를 만들고 &lt;a href=&quot;https://1day1commit.github.io/html-css/html-css-1/&quot; target=&quot;\_blank&quot;&gt;블로그 글&lt;/a&gt; 작성&lt;/li&gt;
&lt;/ul&gt;</content><author><name>TAEYEONG JEONG</name></author><category term="TIL" /><category term="TIL" /><category term="Netlify" /><summary type="html">오늘 한 일 (회고) 위코드에서 배운 내용을 가지고 HTML 과 CSS 를 이용해 자기소개 페이지를 만들고 블로그 글 작성</summary></entry></feed>